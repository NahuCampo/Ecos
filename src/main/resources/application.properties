## Configuración de la base de datos
spring.datasource.url= jdbc:mariadb://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?allowPublicKeyRetrieval=true&useSSL=false&useTimezone=true&serverTimezone=GMT&characterEncoding=UTF-8
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASS}

spring.security.oauth2.client.registration.google.client-id= ${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret= ${GOOGLE_CLIENT_SECRET}
jwt.secret= ${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}
google.maps.apiKey = ${GOOGLE_MAPS_API_KEY}
## Configuración de JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true

api.version=1.0.0
api.description= This is an API to manage users, content and organizations for ecosistema. Provides endpoints to create, read, update, and delete users on the system.

## Configuracion de Mail service
spring.mail.host=smtp.gmail.com
spring.mail.port=${MAIL_PORT}
spring.mail.protocol=smtp
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.quitwait=false